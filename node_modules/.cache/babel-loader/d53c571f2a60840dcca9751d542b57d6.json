{"ast":null,"code":"var _jsxFileName = \"E:\\\\HOCTAP\\\\reactJS\\\\helloworld\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport TodoList from \"./component/TodoList\";\nimport Textfield from \"@atlaskit/textfield\";\nimport Button from \"@atlaskit/button\";\nimport { useCallback, useState, useEffect } from \"react\";\nimport { v4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //state, props\n  const [todoList, setTodoList] = useState([]); // array;\n\n  const [textInput, setTextInput] = useState(\"\"); // text;\n  //useEffect\n\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  const onTextInputChange = useCallback(e => {\n    setTextInput(e.target.value);\n  }, []);\n  const onAddButtonClick = useCallback(e => {\n    //theem text vao todoList\n    setTodoList([{\n      id: v4(),\n      name: textInput,\n      isCompleted: false\n    }, ...todoList]);\n    setTextInput(\"\");\n  }, [textInput]);\n  const onCheckBtnClick = useCallback(id => {\n    setTodoList(prevState => prevState.map(todo => todo.id === id ? { ...todo,\n      isCompleted: true\n    } : todo));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Danh s\\xE1ch c\\u1EA7n l\\xE0m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Textfield, {\n      name: \"add-todo\",\n      placeholder: \"Th\\xEAm vi\\u1EC7c c\\u1EA7n l\\xE0m.. \",\n      elemAfterInput: /*#__PURE__*/_jsxDEV(Button, {\n        isDisabled: !textInput,\n        appearance: \"primary\",\n        onClick: onAddButtonClick,\n        children: \"Th\\xEAm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this),\n      css: {\n        padding: \"2px 4px 2px\"\n      },\n      value: textInput,\n      onChange: onTextInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: todoList,\n      onCheckBtnClick: onCheckBtnClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Tj5LVDk7dx3Q8wz/XctR0IfIvAo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/HOCTAP/reactJS/helloworld/src/App.js"],"names":["TodoList","Textfield","Button","useCallback","useState","useEffect","v4","App","todoList","setTodoList","textInput","setTextInput","effect","cleanup","input","onTextInputChange","e","target","value","onAddButtonClick","id","name","isCompleted","onCheckBtnClick","prevState","map","todo","padding"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,EAAT,QAAmB,MAAnB;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CAFa,CAEiC;;AAC9C,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C,CAHa,CAGmC;AAEhD;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM;AACN,WAAO,MAAM;AACXC,MAAAA,OAAO;AACR,KAFD;AAGD,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;AAOA,QAAMC,iBAAiB,GAAGZ,WAAW,CAAEa,CAAD,IAAO;AAC3CL,IAAAA,YAAY,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFoC,EAElC,EAFkC,CAArC;AAGA,QAAMC,gBAAgB,GAAGhB,WAAW,CACjCa,CAAD,IAAO;AACL;AACAP,IAAAA,WAAW,CAAC,CACV;AAAEW,MAAAA,EAAE,EAAEd,EAAE,EAAR;AAAYe,MAAAA,IAAI,EAAEX,SAAlB;AAA6BY,MAAAA,WAAW,EAAE;AAA1C,KADU,EAEV,GAAGd,QAFO,CAAD,CAAX;AAIAG,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GARiC,EASlC,CAACD,SAAD,CATkC,CAApC;AAWA,QAAMa,eAAe,GAAGpB,WAAW,CAAEiB,EAAD,IAAQ;AAC1CX,IAAAA,WAAW,CAAEe,SAAD,IACVA,SAAS,CAACC,GAAV,CAAeC,IAAD,IACZA,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGM,IAAL;AAAWJ,MAAAA,WAAW,EAAE;AAAxB,KAAjB,GAAkDI,IADpD,CADS,CAAX;AAKD,GANkC,EAMhC,EANgC,CAAnC;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAC,sCAFd;AAGE,MAAA,cAAc,eACZ,QAAC,MAAD;AACE,QAAA,UAAU,EAAE,CAAChB,SADf;AAEE,QAAA,UAAU,EAAC,SAFb;AAGE,QAAA,OAAO,EAAES,gBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAYE,MAAA,GAAG,EAAE;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OAZP;AAaE,MAAA,KAAK,EAAEjB,SAbT;AAcE,MAAA,QAAQ,EAAEK;AAdZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEP,QAApB;AAA8B,MAAA,eAAe,EAAEe;AAA/C;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AAsBD;;GAxDQhB,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport TodoList from \"./component/TodoList\";\nimport Textfield from \"@atlaskit/textfield\";\nimport Button from \"@atlaskit/button\";\nimport { useCallback, useState, useEffect } from \"react\";\nimport { v4 } from \"uuid\";\nfunction App() {\n  //state, props\n  const [todoList, setTodoList] = useState([]); // array;\n  const [textInput, setTextInput] = useState(\"\"); // text;\n\n  //useEffect\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n\n  const onTextInputChange = useCallback((e) => {\n    setTextInput(e.target.value);\n  }, []);\n  const onAddButtonClick = useCallback(\n    (e) => {\n      //theem text vao todoList\n      setTodoList([\n        { id: v4(), name: textInput, isCompleted: false },\n        ...todoList,\n      ]);\n      setTextInput(\"\");\n    },\n    [textInput]\n  );\n  const onCheckBtnClick = useCallback((id) => {\n    setTodoList((prevState) =>\n      prevState.map((todo) =>\n        todo.id === id ? { ...todo, isCompleted: true } : todo\n      )\n    );\n  }, []);\n  return (\n    <>\n      <h3>Danh sách cần làm</h3>\n      <Textfield\n        name=\"add-todo\"\n        placeholder=\"Thêm việc cần làm.. \"\n        elemAfterInput={\n          <Button\n            isDisabled={!textInput}\n            appearance=\"primary\"\n            onClick={onAddButtonClick}\n          >\n            Thêm\n          </Button>\n        }\n        css={{ padding: \"2px 4px 2px\" }}\n        value={textInput}\n        onChange={onTextInputChange}\n      ></Textfield>\n      <TodoList todoList={todoList} onCheckBtnClick={onCheckBtnClick} />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}